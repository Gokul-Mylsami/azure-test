name: Get stable builds
on:
  workflow_dispatch:
    inputs:
      platform:
        description: "Platform (aws,azure)"
        required: true
        type: choice
        options:
          - aws
          - azure
        default: aws
      env:
        description: "Environment(dev,int,stage,spro)"
        required: true
        type: choice
        options:
          - dev
          - int
          - stage
          - spro
        default: dev
      currentversion:
        description: "Current Major Release Version"
        required: true
        type: choice
        options:
          - 1104
          - 1103
          - 1101
          - 1100
jobs:
  Get-Stable-Builds:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: ./pipelinescripts
      - name: Apply Env File
        id: vars
        run: |
          cd ./pipelinescripts
          chmod 777 deploy.env
          ./deploy.env
      - name: AWS login
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_DEV_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_DEV_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_DEV_REGION }}
      - name: Print Stable Builds
        run: |
          buildfile="${{ github.event.inputs.platform }}-${{ github.event.inputs.env }}-${{ github.event.inputs.currentversion }}-stablebuilds.txt"

          env_filepresent=$(aws s3 ls s3://${{steps.vars.outputs.STABLE_BUILDS_METADATA_S3_BUCKET}}/${{steps.vars.outputs.STABLE_BUILDS_METADATA_PATH}}/$buildfile || true)
          if [[ "$env_filepresent" == "" ]]
          then
            echo "No stable builds found for the given platform, environment and version."
          else
            aws s3 cp s3://${{steps.vars.outputs.STABLE_BUILDS_METADATA_S3_BUCKET}}/${{steps.vars.outputs.STABLE_BUILDS_METADATA_PATH}}/$buildfile $buildfile
            echo "===================================== $buildfile ====================================="
            cat $buildfile
          fi
